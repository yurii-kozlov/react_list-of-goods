{"version":3,"sources":["App.tsx","GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","sortInInitialOrder","setState","sortInReverse","sortByLength","LENGTH","sortByAlphabet","ALPHABET","this","preparedGoods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFCZQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SDLJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgDE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QATzB,EAaEG,cAAgB,WACd,EAAKD,UAAS,SAACL,GAAD,MAAmB,CAC/BC,YAAaD,EAAMC,gBAfzB,EAmBEM,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUT,EAASe,UApBvC,EAuBEC,eAAiB,WACf,EAAKJ,SAAS,CAAEH,SAAUT,EAASiB,YAxBvC,4CA2BE,WACE,MAAiCC,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAjEH,SACLjB,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOlB,GAsBzB,OApBAkB,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKT,EAASiB,SACZ,OAAOK,EAAME,cAAcD,GAE7B,KAAKvB,EAASe,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITjB,GACFY,EAAaM,UAIfC,QAAQC,IAAInB,EAAUD,GAEfY,EAsCiBS,CACpBxB,EAAiB,CAAEG,aAAYC,aAGjC,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWrB,IAAaT,EAASiB,SAC7B,iBACA,0BACJe,QAASd,KAAKF,eALhB,iCAUA,wBACEe,KAAK,SACLD,UAAWrB,IAAaT,EAASe,OAC7B,oBACA,6BACJiB,QAASd,KAAKJ,aALhB,4BAUA,wBACEiB,KAAK,SACLD,UAAWtB,EACP,oBACA,6BACJwB,QAASd,KAAKL,cALhB,sBAUgB,IAAfL,GAAwBC,IAAaT,EAASU,KAC7C,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASd,KAAKP,mBAHhB,mBAOE,MAIN,cAAC,EAAD,CAAWT,MAAOiB,WA9E1B,GAAyBc,IAAMC,WE/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eccc4012.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) : number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortInInitialOrder = (): void => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  sortInReverse = (): void => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = (): void => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n    const preparedGoods = getReorderedGoods(\n      goodsFromServer, { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.sortInReverse}\n          >\n            Reverse\n          </button>\n\n          {isReversed !== false || sortType !== SortType.NONE ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.sortInInitialOrder}\n            >\n              Reset\n            </button>\n          ) : ''}\n\n        </div>\n\n        <GoodsList goods={preparedGoods} />\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string []\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}